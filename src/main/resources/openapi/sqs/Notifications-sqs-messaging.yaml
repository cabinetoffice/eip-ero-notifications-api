openapi: 3.0.0
info:
  title: Notifications SQS Message Types
  version: '1.3.0'
  description: |-
    Notifications SQS Message Types
    
    Whilst this is an openAPI spec, it does not define being used to define REST APIs, nor is it intended to.
    
    The `paths` elements are being used to document (at a high level) the SQS queues and the request bodies that are expected
    to be published to them. **There is no intent to generate or implement SQS queues or listener classes from this document.**
    
    The `paths` element is only being used in order to maintain the structure of the openApi spec, as `paths` are required 
    elements.
#
# --------------------------------------------------------------------------------
#

paths:
  #
  # --------------------------------------------------------------------------------
  # SQS Queues start here
  # --------------------------------------------------------------------------------
  #
  '/send-uk-gov-notify-message':
    post:
      tags:
        - SQS Queues
      requestBody:
        $ref: '#/components/requestBodies/SendNotifyMessage'
      responses:
        '204':
          description: No response content.

components:
  #
  # Schema and Enum Definitions
  # --------------------------------------------------------------------------------
  schemas:
    SendNotifyMessage:
      title: SendNotifyMessage
      type: object
      description: SQS Message for sending GOV.UK Notify messages
      properties:
        channel:
          $ref: '#/components/schemas/NotificationChannel'
        language:
          $ref: '#/components/schemas/Language'
        sourceType:
          $ref: '#/components/schemas/SourceType'
        sourceReference:
          type: string
          description: Reference in the source of the application this message relates
        gssCode:
          type: string
          description: GSS code of the ERO responsible for sending the message
        requestor:
          type: string
          description: Identifier of the user or system responsible for sending the message
        toAddress:
          $ref: '#/components/schemas/MessageAddress'
        messageType:
          $ref: '#/components/schemas/MessageType'
        personalisation1:
          $ref: '#/components/schemas/TemplatePersonalisation'
      required:
        - channel
        - language
        - sourceType
        - sourceReference
        - gssCode
        - requestor
        - toAddress
        - messageType

    SendNotifyPhotoResubmissionMessage:
      title: SendNotifyPhotoResubmissionMessage
      type: object
      description: SQS Message for sending GOV.UK Notify messages for Photo resubmission
      allOf:
        - $ref: '#/components/schemas/SendNotifyMessage'
      properties:
        personalisation:
          $ref: '#/components/schemas/PhotoResubmissionPersonalisation'

    TemplatePersonalisation:
      title: TemplatePersonalisation
      type: array
      description: Template personalisation values to replace each template placeholder.
      items:
        $ref: '#/components/schemas/TemplatePersonalisationNameValue'

    TemplatePersonalisationNameValue:
      title: TemplatePersonalisationNameValue
      type: object
      description: Template personalisation name value item.
      properties:
        name:
          type: string
          example: "applicant-name"
        value:
          type: string
          example: "John"
      required:
        - name
        - value

    PhotoResubmissionPersonalisation:
      title: PhotoResubmissionPersonalisation
      type: object
      description: Personalisation details for photo resubmission template
      properties:
        applicationReference:
          type: string
          description: The reference number of the Voter Card Application
          example: A3JSZC4CRH
        firstName:
          type: string
          description: The applicant's first name
          example: Fred
        photoRequestFreeText:
          type: string
          description: Free text regarding photo request
          example: Please provide a clear image
        uploadPhotoLink:
          type: string
          description: The URL link to upload a new image
          example: 'http://localhost:8080/eros/city-council/applications/507f1f77bcf86cd799439011/photos/398c1be2-7950-48a2-aca8-14cb9276a673'
        eroContactDetails:
          $ref: '#/components/schemas/ContactDetails'
      required:
        - applicationReference
        - firstName
        - photoRequestFreeText
        - uploadPhotoLink
        - eroContactDetails
    ContactDetails:
      title: ContactDetails
      type: object
      description: Contact details for an ERO
      properties:
        localAuthorityName:
          description: Name of the Local Authority
          type: string
          example: City of Sunderland
        website:
          description: ERO website address
          type: string
          example: "https://ero-address.com"
        phone:
          description: ERO phone number
          type: string
          example: 01234 567890
        email:
          description: Email address for an ERO
          type: string
          example: fred.blogs@some-domain.co.uk
        address:
          $ref: '#/components/schemas/Address'
      required:
        - localAuthorityName
        - website
        - phone
        - email
        - address
    Address:
      title: Address
      description: Address format used throughout gov.uk voter services for an ERO.
      type: object
      x-examples:
        Minimum data:
          street: Street 1
          postcode: PC1 2FB
        Normal Address:
          street: East Lodge
          property: Balruddery
          locality: Invergowrie
          town: Dundee
          area: Angus
          postcode: DD25LF
      properties:
        street:
          type: string
          minLength: 1
          maxLength: 255
          example: Charles Lane
        property:
          type: string
          maxLength: 255
        locality:
          type: string
          maxLength: 255
        town:
          type: string
          maxLength: 255
          example: London
        area:
          type: string
          maxLength: 255
        postcode:
          type: string
          pattern: '^((([A-PR-UWYZ][0-9][0-9]?)|(([A-PR-UWYZ][A-HK-Y][0-9][0-9]?)|(([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))))[0-9][ABD-HJLNP-UW-Z]{2})$'
          minLength: 1
          maxLength: 10
          example: PE3 6SB
      required:
        - street
        - property
        - locality
        - town
        - area
        - postcode
    Language:
      title: Language
      description: The language to notify an applicant
      type: string
      enum:
        - cy
        - en
      default: en

    NotificationChannel:
      title: NotificationChannel
      description: The channel to notify an applicant
      type: string
      enum:
        - email

    SourceType:
      title: SourceType
      type: string
      enum:
        - voter-card

    MessageType:
      title: MessageType
      type: string
      enum:
        - application-received
        - application-approved
        - application-rejected
        - photo-resubmission

    MessageAddress:
      type: object
      description: Address type needs to match message type
      properties:
        emailAddress:
          type: string
          format: email
        postalAddress:
          type: object
          properties:
            address_line_1:
              type: string
            address_line_2:
              type: string
            address_line_3:
              type: string
            address_line_4:
              type: string
            address_line_5:
              type: string
            address_line_6:
              type: string
            address_line_7:
              type: string
        smsNumber:
          type: string

  #
  # Response Body Definitions
  # --------------------------------------------------------------------------------
  responses: { }

  #
  # Request Body Definitions
  # --------------------------------------------------------------------------------
  requestBodies:
    SendNotifyMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SendNotifyMessage'
